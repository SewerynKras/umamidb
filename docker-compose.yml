version: '3.8'

services:
  # Static file server
  static:
    image: halverneus/static-file-server:latest
    volumes:
      - ./public:/web:ro
    environment:
      - FOLDER=/web
      - PORT=8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.umami-static.rule=Host(`umami.golemdb.io`) && Path(`/`)"
      - "traefik.http.routers.umami-static.entrypoints=websecure"
      - "traefik.http.routers.umami-static.tls.certresolver=letsencrypt"
      - "traefik.http.routers.umami-static.priority=1"
      - "traefik.http.services.umami-static.loadbalancer.server.port=8080"
    restart: always

  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    ports:
      - "3333:3000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.umami-app.rule=Host(`umami.golemdb.io`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`) || PathPrefix(`/script.js`) || PathPrefix(`/_next/static`) || PathPrefix(`/login`) || PathPrefix(`/settings`))"
      - "traefik.http.routers.umami-app.entrypoints=websecure"
      - "traefik.http.routers.umami-app.tls.certresolver=letsencrypt"
      - "traefik.http.routers.umami-app.priority=10"
      - "traefik.http.services.umami-app.loadbalancer.server.port=3000"

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - umami-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U umami_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Real-time Golem DB Sync Service
  golem-realtime-sync:
    image: oven/bun:alpine
    working_dir: /app
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    command: sh -c "bun install && node real-time-sync.js"
    depends_on:
      - db
      - umami
    restart: unless-stopped

  # Manual Golem DB Sync Service (legacy)
  golem-sync:
    image: oven/bun:alpine
    working_dir: /app
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    command: sh -c "bun install && node golem-sync.js sync"
    depends_on:
      - db
      - umami
    restart: "no"
    profiles:
      - sync

volumes:
  umami-db-data:

networks:
  default:
    external: true
    name: moon_golem_network